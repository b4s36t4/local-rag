---
import {
  Eye,
  FileText,
  RefreshCcw,
  Database,
  ArrowUpFromLine,
} from "lucide-react";
import Layout from "../layouts/Layout.astro";

const agents = [
  {
    title: "ChatPDF",
    description: "Chat with your PDF, ask questions summarize anything.",
    id: "chat_pdf",
    embedding_json: "chat_pdf.json",
    icon: FileText,
  },
  {
    title: "SQLMan",
    description: "A SQL helper that you can ask question by giving your schema",
    id: "sql_chat",
    embedding_json: "sql_chat.json",
    icon: Database,
    upload: true,
    uploadDescription: "Share your DB schema to get relavent answers",
    language: "sql",
    editor: true,
  },
];
---

<Layout title="Agents">
  <main class="mx-auto mt-6 md:w-[60%]">
    <h3 class="text-2xl font-semibold underline">Agents</h3>

    <div class="mt-4 flex items-center flex-wrap">
      {
        agents.map((agent) => {
          return (
            <div class="w-[250px] border-2 rounded-lg border-blue-200 p-2 agent-entry">
              <agent.icon className="my-4" size={40} />
              <h2 class="text-lg font-bold">{agent.title}</h2>
              <h4 class="text-base text-gray-600">{agent.description}</h4>
              <div class="my-2 flex space-x-2">
                <span
                  class="view-documents"
                  title="View loaded/saved documents"
                >
                  <Eye />
                </span>
                <span class="reload-vector" title="Reload the data">
                  <RefreshCcw />
                </span>
                {agent.upload && (
                  <span role="button" title={agent.uploadDescription}>
                    <ArrowUpFromLine />
                  </span>
                )}
              </div>
              <button
                data-agent-id={agent.id}
                class="w-full bg-black text-white mt-4 rounded-md p-1 agentEnable"
              >
                Enable
              </button>
            </div>
          );
        })
      }
    </div>
  </main>
</Layout>

<script>
  import { agentStore } from "../store/agent";
  import { ModelInstance } from "../agents/BaseInstance";
  import { ChatPDF } from "../agents/ChatPDF";
  import { getFiles } from "../utils/files";
  const { selectedAgentId, updateAgent } = agentStore.getState();

  const buttons = document.querySelectorAll(
    ".agentEnable"
  ) as NodeListOf<HTMLButtonElement>;

  buttons.forEach((button) => {
    const agentId = button.dataset["agentId"];

    agentStore.subscribe(({ selectedAgentId }) => {
      if (selectedAgentId === agentId) {
        button.innerText = "Disable";
        return;
      }

      button.innerText = "Enable";
    });

    if (agentId === selectedAgentId) {
      button.innerText = "Disable";
    }

    const agentEntry = button.parentNode;

    const viewButton = agentEntry?.querySelector(".view-documents");
    const reloadButton = agentEntry?.querySelector(".reload-vector");

    viewButton?.addEventListener("click", () => {
      console.log("view...", getFiles(agentId ?? ""), "instance");
    });

    button.addEventListener("click", function () {
      if (!agentId) {
        return;
      }

      if (agentId === agentStore.getState().selectedAgentId) {
        updateAgent(null, null);
        return;
      }

      updateAgent(agentId, null);
    });
  });
</script>
